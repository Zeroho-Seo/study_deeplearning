import os
import torch
import torch.nn as nn
import torch.nn.functional as F
from torchtext import data, datasets
import random

SEED=5
random.seed(SEED)
torch.manual_seed(SEED)

batch_size = 64
lr = 0.001
Epochs = 10

device = torch.device("cuda" if torch.cuda.is_available() else "cpu")

#왜 torchtext.data.Field가 안되지. 아니 torchtext 전반으로 안되는데...
text = data.Field(sequential = True, batch_first = True, lower = True)
Label = data.Field(sequential = False, batch_first = True)

trainset, testset = datasets.IMDB.splits(text, Label)
text.build_vocab(trainset, min_freq=5)
Label.build_vocab(trainset)
vocab_size = len(text.vocab)
n_classes = 2

trainset, valset = trainset.split(split_ratio = 0.8)
train_iter, val_iter, test_iter = data.BucketIterator.splits((trainset, valset, testset),
                                                             batch_size = batch_size,
                                                             shuffle = True,
                                                             repeat = False)
batch = next(iter(train_iter))
batch = next(iter(train_iter))
train_iter, val_iter, test_iter = data.BucketIterator.splits((trainset, valset, testset),
                                                             batch_size = batch_size,
                                                             shuffle = True,
                                                             repeat = False)


class GRU(nn.Module):
    def __init__(self, n_layers, hidden_dim, n_vocab, embed_dim, n_classes, dropout_p=0.2):
        super(GRU, self).__init__()
        self.n_layers = n_layers
        self.hidden_dim = hidden_dim
        self.embed = nn.Embedding(n_vocab, embed_dim)
        self.dropout = nn.Dropout(dropout_p)
        self.gru = nn.GRU(embed_dim, self.hidden_dim,
                          num_layers = self.n_layers,
                          batch_first = True)
        self.out = nn.Linear(self.hidden_dim, n_classes)

    def forward(self, x):
        x = self.embed(x)
        h_0 = self._init_state(batch_size = x.size(0))
        x, _ = self.gru(x, h_0)
        h_t = x[:, -1, :]
        self.dropout(h_t)
        logit = self.out(h_t)
        return logit

    def _init_state(self, batch_size =1):
        weight = next(self.parameters()).data
        return weight.new(self.n_layers, batch_size, self.hidden_dim).zero_()

model = GRU(1, 256, vocab_size, 128, n_classes, 0.5).to(device)
optimizer = torch.optim.Adam(model.parameters(), lr=lr)


def train(model, optimizer, train_iter):
    model.train()
    for b, batch in enumerate(train_iter):
        x, y = batch.text.to(device), batch.label.to(device)
        y.data.sub_(1)
        optimizer.zero_grad()
        logit = model(x)
        loss=F.cross_entropy(logit, y)
        loss.backward()
        optimizer.step()

def evaluate(model, val_iter):
    """evaluate model"""
    model.eval()
    corrects, total_loss = 0, 0
    for batch in val_iter:
        x, y = batch.text.to(DEVICE), batch.label.to(DEVICE)
        y.data.sub_(1) # 레이블 값을 0과 1로 변환
        logit = model(x)
        loss = F.cross_entropy(logit, y, reduction='sum')
        total_loss += loss.item()
        corrects += (logit.max(1)[1].view(y.size()).data == y.data).sum()
    size = len(val_iter.dataset)
    avg_loss = total_loss / size
    avg_accuracy = 100.0 * corrects / size
    return avg_loss, avg_accuracy

best_val_loss = None
for e in range(1, EPOCHS+1):
    train(model, optimizer, train_iter)
    val_loss, val_accuracy = evaluate(model, val_iter)

    print("[Epoch: %d] val loss : %5.2f | val accuracy : %5.2f" % (e, val_loss, val_accuracy))

    # 검증 오차가 가장 적은 최적의 모델을 저장
    if not best_val_loss or val_loss < best_val_loss:
        if not os.path.isdir("snapshot"):
            os.makedirs("snapshot")
        torch.save(model.state_dict(), './snapshot/txtclassification.pt')
        best_val_loss = val_loss

model.load_state_dict(torch.load('./snapshot/txtclassification.pt'))
test_loss, test_acc = evaluate(model, test_iter)

#이 코드를 내 파이참에서는 돌릴 수 없었다.
#torchtext가 제대로 작동하게끔 설치를 못했다.
#cuda도 파이참에서 is_available하지 않음. 다시 봐야한다.
#참고로 anaconda prompt에서 conda가 제대로 작동하지 않아서 torchtext설치도 잘 못했다.
#이런 문제점들을 돌아보며 나중에 복습예정.
