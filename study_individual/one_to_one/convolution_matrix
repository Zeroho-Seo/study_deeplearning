import numpy as np

a = np.array([[5,1,3,0], [0,1,0,3], [3,4,1,1], [1,3,0,1]])
filter = np.array([1,3,1,0]).reshape(2,2)

def matrix_convolution(data, filter, stride= 1):
    if stride*filter.shape[0] > data.shape[0] or stride*filter.shape[1] > data.shape[1]:
        return 'stride is too large'

    result = []
    count_i = 0
    count_j = 0

    for i in range(0, data.shape[0] - filter.shape[0]+1, stride):
        count_i +=1
        for j in range(0, data.shape[1] - filter.shape[1] + 1, stride):
            count_j +=1
            result.append(np.sum(data[i:filter.shape[0] +i, j:filter.shape[1]+j]*filter))

    result = np.array(result).reshape(int(count_j/count_i),count_i)
    return result

print(matrix_convolution(a, filter))
